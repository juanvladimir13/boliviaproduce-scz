---
import proyectosData from "@content/participantes/project.yml";
import areaData from "@content/areas/area.yml";
import type { IAreaItem, IProyecto } from "@datatypes/datatypes";

import BaseLayout from "@layouts/BaseLayout.astro";
import Proyecto from "@components/Proyecto.astro";

interface Props {
  proyectos: IProyecto[];
}

export async function getStaticPaths() {
  const agrupadosPorArea = proyectosData.proyectos.reduce(
    (acc: any, proyecto: IProyecto) => {
      const areaId = proyecto.areaId || 0;
      if (!acc[areaId]) {
        acc[areaId] = [];
      }
      acc[areaId].push(proyecto);
      return acc;
    },
    {},
  );

  return Object.entries(agrupadosPorArea).map(([areaId, proyectos]) => ({
    params: { id: parseInt(areaId) },
    props: { proyectos },
  }));
}

const { id } = Astro.params;
const { proyectos } = Astro.props;
const areaName = areaData.areas.find((area: IAreaItem) => area.pk == id);
---

<BaseLayout>
  <h3>{areaName.name}</h3>
  <ul>
    {
      proyectos.map(
        ({ distrito, ue, proyecto, area, ubicacion }: IProyecto) => (
          <li>
            <Proyecto
              distrito={distrito}
              ue={ue}
              proyecto={proyecto}
              area={area}
              ubicacion={ubicacion}
            />
          </li>
        ),
      )
    }
  </ul>
</BaseLayout>

<style>
  h3 {
    margin: 15px 0px;
    font-size: var(--text-20);
    font-weight: 500;
    text-align: center;
    text-transform: uppercase;
    color: var(--green-900);
  }

  li {
    margin: 15px 10px;
  }
</style>
